name: Packaging OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      openwrt_soc:
        description: "Select device board."
        required: false
        default: "s905d"
        type: choice
        options:
          - all
          - s905d
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.1"
        type: choice
        options:
          - 5.15.1_6.1.1
          - 5.15.1
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "breakings/OpenWrt"
        type: choice
        options:
          - breakings/OpenWrt
          - ysx88/kernel
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
  schedule:
    - cron: 0 2 * * *

env:
  TZ: America/New_York

jobs:
  build:
    runs-on: ubuntu-22.04
    if: ${{ github.event.repository.owner.id }} == ${{ github.event.sender.id }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          [[ -n "${AGENT_TOOLSDIRECTORY}" ]] && sudo rm -rf "${AGENT_TOOLSDIRECTORY}"
          sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d /usr/local/lib/android 2>/dev/null
          sudo -E apt-get -y update
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* powershell openjdk* mongodb* moby* || true
          sudo -E apt-get -y install $(curl -fsSL https://is.gd/depend_ubuntu2204_openwrt)
          sudo -E systemctl daemon-reload
          #sudo -E apt-get -y full-upgrade
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo timedatectl set-timezone "${TZ}"
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Download armvirt file
        id: download
        if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
        run: |
          armvirt_tarfile_repo="ysx88/OpenWrt"
          releases_tag_keywords="ARMv8"

          armvirt_tarfile_path="openwrt/bin/targets/armvirt/64"
          [[ -d "${armvirt_tarfile_path}" ]] || mkdir -p ${armvirt_tarfile_path}

          latest_version="$(curl -s \
                              -H "Accept: application/vnd.github+json" \
                              -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
                              https://api.github.com/repos/${armvirt_tarfile_repo}/releases |
                              jq '.[]' |
                              jq -s --arg RTK "${releases_tag_keywords}" '.[] | select(.tag_name | contains($RTK))' |
                              jq -s '.[].assets[] | {data:.updated_at, url:.browser_download_url}' |
                              jq -s --arg BOARD "-rootfs.tar.gz" '.[] | select(.url | endswith($BOARD))' |
                              jq -s 'sort_by(.data)|reverse[]' |
                              jq -s '.[0]' -c
                          )"

          [[ "${latest_version}" == "null" ]] && echo "Invalid OpenWrt rootfs download address." && exit 1
          latest_updated_at="$(echo ${latest_version} | jq -r '.data')"
          latest_url="$(echo ${latest_version} | jq -r '.url')"

          wget -q -P "${armvirt_tarfile_path}" "${latest_url}"
          [[ "${?}" -ne "0" ]] && echo "Invalid OpenWrt rootfs download address." && exit 1

          echo "build_tag=${releases_tag_keywords}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
          echo "status=success" >> ${GITHUB_OUTPUT}

      - name: Package OpenWrt Firmware
        uses: ophub/flippy-openwrt-actions@main
        if: ${{ steps.download.outputs.status }} == 'success' && !cancelled()
        env:
          OPENWRT_ARMVIRT: openwrt/bin/targets/*/*/*rootfs.tar.gz
          PACKAGE_SOC: ${{ inputs.openwrt_soc }}
          KERNEL_REPO_URL: ${{ inputs.kernel_repo }}
          KERNEL_VERSION_NAME: ${{ inputs.openwrt_kernel }}
          KERNEL_AUTO_LATEST: ${{ inputs.auto_kernel }}
          SCRIPT_DIY_PATH: ${{ inputs.script_diy_path }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Upload OpenWrt Firmware to Release
        uses: ncipollo/release-action@main
        if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
        with:
          tag: ${{ steps.download.outputs.build_tag }}
          artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          token: ${{ secrets.GH_TOKEN }}
          body: |
            ### OpenWrt Image information
            - Default IP: 192.168.71.4
            - Default username: root
            - Default password: password
            - Default WIFI name: OpenWrt
            - Default WIFI password: none
            ### Install to EMMC
            - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
